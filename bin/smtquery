if __name__ == "__main__":
    import argparse
    import smtquery.config
    import smtquery.storage.smt.fs
    import smtquery.tools
    import sys
    import os
    import resource 
    import logging

    logging.basicConfig(filename='smtquery.log', level=logging.DEBUG, format='%(asctime)s %(levelname)-8s %(message)s', datefmt='%Y-%m-%d %H:%M:%S')   

    max_rec = 100000
    #resource.setrlimit(resource.RLIMIT_STACK, [0x100 * max_rec, resource.RLIM_INFINITY])
    sys.setrecursionlimit(max_rec)    

    parser = argparse.ArgumentParser()
    parser.add_argument ('--confloc',dest="conf",type=str,default="./data/conf")

    subparsers = parser.add_subparsers(help='sub-command help')
    for k in smtquery.tools.tools:				
        subp = subparsers.add_parser (k.getName ())
        k.addArguments (subp)
        subp.set_defaults (func=k.run)
    
    args = parser.parse_args ()
    
    filelocator = smtquery.config.FileLocator ([args.conf])
    with open (filelocator.findFile("conf.yml")) as ff:
        smtquery.config.readConfig (ff,os.path.abspath(os.getcwd()))
    
    
    if "func" in args:
        args.func (args)
    

    """
    try:
        if "func" in args:
            args.func (args)
    except Exception as e:
        exc_type, exc_obj, exc_tb = sys.exc_info()
        fname = os.path.split(exc_tb.tb_frame.f_code.co_filename)[1]
        logging.debug(f"Crash {exc_type} {fname} {exc_tb.tb_lineno}")
        print(e)
    """

    smtquery.config.getConfiguration().cleanup()

